/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _TUPLAS_H_RPCGEN
#define _TUPLAS_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


struct tuple {
	char *value1;
	int value2;
	double value3;
};
typedef struct tuple tuple;

typedef int status;

struct set_tuple_1_argument {
	int key;
	char *value1;
	int value2;
	double value3;
};
typedef struct set_tuple_1_argument set_tuple_1_argument;

struct modify_tuple_1_argument {
	int key;
	char *value1;
	int value2;
	double value3;
};
typedef struct modify_tuple_1_argument modify_tuple_1_argument;

struct copy_tuple_1_argument {
	int key1;
	int key2;
};
typedef struct copy_tuple_1_argument copy_tuple_1_argument;

#define TUPLE_SERVICE 13391170
#define TUPLE_SERVICE_V1 1

#if defined(__STDC__) || defined(__cplusplus)
#define init_service 1
extern  enum clnt_stat init_service_1(status *, CLIENT *);
extern  bool_t init_service_1_svc(status *, struct svc_req *);
#define set_tuple 2
extern  enum clnt_stat set_tuple_1(int , char *, int , double , status *, CLIENT *);
extern  bool_t set_tuple_1_svc(int , char *, int , double , status *, struct svc_req *);
#define get_tuple 3
extern  enum clnt_stat get_tuple_1(int , tuple *, CLIENT *);
extern  bool_t get_tuple_1_svc(int , tuple *, struct svc_req *);
#define modify_tuple 4
extern  enum clnt_stat modify_tuple_1(int , char *, int , double , status *, CLIENT *);
extern  bool_t modify_tuple_1_svc(int , char *, int , double , status *, struct svc_req *);
#define delete_tuple 5
extern  enum clnt_stat delete_tuple_1(int , status *, CLIENT *);
extern  bool_t delete_tuple_1_svc(int , status *, struct svc_req *);
#define check_existence 6
extern  enum clnt_stat check_existence_1(int , status *, CLIENT *);
extern  bool_t check_existence_1_svc(int , status *, struct svc_req *);
#define copy_tuple 7
extern  enum clnt_stat copy_tuple_1(int , int , status *, CLIENT *);
extern  bool_t copy_tuple_1_svc(int , int , status *, struct svc_req *);
extern int tuple_service_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define init_service 1
extern  enum clnt_stat init_service_1();
extern  bool_t init_service_1_svc();
#define set_tuple 2
extern  enum clnt_stat set_tuple_1();
extern  bool_t set_tuple_1_svc();
#define get_tuple 3
extern  enum clnt_stat get_tuple_1();
extern  bool_t get_tuple_1_svc();
#define modify_tuple 4
extern  enum clnt_stat modify_tuple_1();
extern  bool_t modify_tuple_1_svc();
#define delete_tuple 5
extern  enum clnt_stat delete_tuple_1();
extern  bool_t delete_tuple_1_svc();
#define check_existence 6
extern  enum clnt_stat check_existence_1();
extern  bool_t check_existence_1_svc();
#define copy_tuple 7
extern  enum clnt_stat copy_tuple_1();
extern  bool_t copy_tuple_1_svc();
extern int tuple_service_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_tuple (XDR *, tuple*);
extern  bool_t xdr_status (XDR *, status*);
extern  bool_t xdr_set_tuple_1_argument (XDR *, set_tuple_1_argument*);
extern  bool_t xdr_modify_tuple_1_argument (XDR *, modify_tuple_1_argument*);
extern  bool_t xdr_copy_tuple_1_argument (XDR *, copy_tuple_1_argument*);

#else /* K&R C */
extern bool_t xdr_tuple ();
extern bool_t xdr_status ();
extern bool_t xdr_set_tuple_1_argument ();
extern bool_t xdr_modify_tuple_1_argument ();
extern bool_t xdr_copy_tuple_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_TUPLAS_H_RPCGEN */
